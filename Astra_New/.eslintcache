[{"C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\index.js":"1","C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\App.js":"2","C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\serviceWorker.js":"3","C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\Vehicle.jsx":"4","C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\UploadMap.js":"5","C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\Home.js":"6","C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\Configuration.js":"7","C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\SystemHealth.js":"8","C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\Tracking.js":"9","C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\Reports.js":"10","C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\Temperature.js":"11","C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\Assets.js":"12","C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\TagAllocation.js":"13","C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\Alerts.js":"14","C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\EmployeeRegistraion.js":"15","C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\AirQuality.js":"16","C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\ZoneConfig.js":"17","C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\login\\Login.js":"18","C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\DistanceTracking.js":"19","C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\navbar\\Navbar.js":"20","C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\header\\Header.js":"21","C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\Sensors\\SensorDetails.js":"22","C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\Sensors\\SensorDetailsCards.js":"23","C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\Sensors\\SensorsDetailGraph.js":"24","C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\SlaveGateway.js":"25","C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\MasterGateway.js":"26","C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\AssetReg.js":"27","C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\urls\\apis.js":"28"},{"size":503,"mtime":1643263173733,"results":"29","hashOfConfig":"30"},{"size":7463,"mtime":1645011834749,"results":"31","hashOfConfig":"30"},{"size":5098,"mtime":1643263173819,"results":"32","hashOfConfig":"30"},{"size":14770,"mtime":1645011148702,"results":"33","hashOfConfig":"30"},{"size":9324,"mtime":1643267430067,"results":"34","hashOfConfig":"30"},{"size":8949,"mtime":1643282050487,"results":"35","hashOfConfig":"30"},{"size":4795,"mtime":1643268108599,"results":"36","hashOfConfig":"30"},{"size":17556,"mtime":1643267730080,"results":"37","hashOfConfig":"30"},{"size":42431,"mtime":1643269308756,"results":"38","hashOfConfig":"30"},{"size":6066,"mtime":1643269275741,"results":"39","hashOfConfig":"30"},{"size":35424,"mtime":1643269298942,"results":"40","hashOfConfig":"30"},{"size":26797,"mtime":1643268190876,"results":"41","hashOfConfig":"30"},{"size":8822,"mtime":1643269300854,"results":"42","hashOfConfig":"30"},{"size":10314,"mtime":1643267673505,"results":"43","hashOfConfig":"30"},{"size":8518,"mtime":1643269611716,"results":"44","hashOfConfig":"30"},{"size":29215,"mtime":1643267669427,"results":"45","hashOfConfig":"30"},{"size":9293,"mtime":1643269317928,"results":"46","hashOfConfig":"30"},{"size":4969,"mtime":1643269351923,"results":"47","hashOfConfig":"30"},{"size":5988,"mtime":1643267690054,"results":"48","hashOfConfig":"30"},{"size":5131,"mtime":1643263173970,"results":"49","hashOfConfig":"30"},{"size":1541,"mtime":1645012502849,"results":"50","hashOfConfig":"30"},{"size":6692,"mtime":1643269237668,"results":"51","hashOfConfig":"30"},{"size":13128,"mtime":1643269228962,"results":"52","hashOfConfig":"30"},{"size":10061,"mtime":1643269216571,"results":"53","hashOfConfig":"30"},{"size":8528,"mtime":1643267601855,"results":"54","hashOfConfig":"30"},{"size":9301,"mtime":1643267711765,"results":"55","hashOfConfig":"30"},{"size":19314,"mtime":1643267516596,"results":"56","hashOfConfig":"30"},{"size":1541,"mtime":1643263121641,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"c0l0y9",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"73","messages":"74","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\index.js",[],["117","118"],"C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\App.js",[],"C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\serviceWorker.js",[],"C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\Vehicle.jsx",[],"C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\UploadMap.js",[],"C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\Home.js",[],"C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\Configuration.js",[],"C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\SystemHealth.js",["119"],"import React, { Component, Fragment } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport axios from \"axios\";\r\nimport $ from \"jquery\";\r\nimport \"./Styling.css\";\r\naxios.defaults.xsrfHeaderName = \"x-csrftoken\";\r\n    axios.defaults.xsrfCookieName = \"csrftoken\";\r\n    axios.defaults.withCredentials = true;\r\nimport {\r\n  employeeTag,\r\n  irqSensor,\r\n  masterGateway,\r\n  signalRepeator,\r\n  slaveGateway,\r\n  tempertureSensor,\r\n} from \"../../urls/apis\";\r\n\r\nconst Underline = {\r\n  width: \"75px\",\r\n  height: \"9px\",\r\n  position: \"absolute\",\r\n};\r\n\r\nclass SystemHealth extends Component {\r\n  componentDidMount() {\r\n    // linkClicked(5);\r\n    this.masterHealth();\r\n    this.slaveHealth();\r\n    this.signalRepeatorHealth();\r\n    this.sensorHealth();\r\n    this.assetHealth();\r\n    // timer function for refreshing each 10 seconds\r\n    this.interval1 = setInterval(this.masterHealth, 15 * 1000);\r\n    this.interval2 = setInterval(this.slaveHealth, 15 * 1000);\r\n    this.interval3 = setInterval(this.signalRepeatorHealth, 15 * 1000);\r\n    this.interval4 = setInterval(this.sensorHealth, 15 * 1000);\r\n    this.interval5 = setInterval(this.assetHealth, 15 * 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval1);\r\n    clearInterval(this.interval2);\r\n    clearInterval(this.interval3);\r\n    clearInterval(this.interval4);\r\n    clearInterval(this.interval5);\r\n  }\r\n\r\n  /** Fetch health details of all master gateway registered */\r\n  masterHealth = () => {\r\n    axios({ method: \"GET\", url: masterGateway })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          let master = response.data;\r\n          $(\"#gatewayHealth\").empty();\r\n          // Displaying master gateway health details in table format\r\n          if (master.length !== 0) {\r\n            for (let i = 0; i < master.length; i++) {\r\n              let timestamp =\r\n                  master[i].lastseen.substr(0, 10) +\r\n                  \" \" +\r\n                  master[i].lastseen.substr(11, 8),\r\n                status = \"red\";\r\n              if (new Date() - new Date(master[i].lastseen) <= 2 * 60 * 1000) {\r\n                status = \"green\";\r\n              }\r\n              $(\"#gatewayHealth\").append(\r\n                \"<tr><td>\" +\r\n                  (i + 1) +\r\n                  \"</td><td>\" +\r\n                  master[i].gatewayid +\r\n                  \"</td><td>\" +\r\n                  master[i].floor.name +\r\n                  \"</td><td>\" +\r\n                  timestamp +\r\n                  \"</td><td>\" +\r\n                  \"<div class='circle' style='margin:auto;background-color:\" +\r\n                  status +\r\n                  \";'></div></td></tr>\"\r\n              );\r\n            }\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        // console.log(error);\r\n        if (error.response.status === 403) {\r\n          $(\"#syshealth_displayModal\").css(\"display\", \"block\");\r\n          $(\"#content\").text(\"User Session has timed out. Please Login again.\");\r\n        } else {\r\n          $(\"#sys-error\").text(\r\n            \"Master Gateway : Request failed with status code \" +\r\n              error.response.status\r\n          );\r\n        }\r\n      });\r\n  };\r\n\r\n  /** Fetch health details of all slave gateway registered */\r\n  slaveHealth = () => {\r\n    axios({ method: \"GET\", url: slaveGateway })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          let slave = response.data;\r\n          $(\"#slaveHealth\").empty();\r\n          if (slave.length !== 0) {\r\n            for (let i = 0; i < slave.length; i++) {\r\n              let timestamp =\r\n                  slave[i].lastseen.substr(0, 10) +\r\n                  \" \" +\r\n                  slave[i].lastseen.substr(11, 8),\r\n                status = \"red\";\r\n              if (new Date() - new Date(slave[i].lastseen) <= 2 * 60 * 1000) {\r\n                status = \"green\";\r\n              }\r\n              $(\"#slaveHealth\").append(\r\n                \"<tr><td>\" +\r\n                  (i + 1) +\r\n                  \"</td><td>\" +\r\n                  slave[i].gatewayid +\r\n                  \"</td><td>\" +\r\n                  slave[i].master.floor.name +\r\n                  \"</td><td>\" +\r\n                  slave[i].master.gatewayid +\r\n                  \"</td><td>\" +\r\n                  timestamp +\r\n                  \"</td><td>\" +\r\n                  \"<div class='circle' style='margin:auto;background-color:\" +\r\n                  status +\r\n                  \";'></div></td></tr>\"\r\n              );\r\n            }\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        // console.log(error);\r\n        if (error.response.status === 403) {\r\n          $(\"#syshealth_displayModal\").css(\"display\", \"block\");\r\n          $(\"#content\").text(\"User Session has timed out. Please Login again.\");\r\n        } else {\r\n          $(\"#sys-error\").text(\r\n            \"Slave Gateway : Request failed with status code \" +\r\n              error.response.status\r\n          );\r\n        }\r\n      });\r\n  };\r\n\r\n  /** Fetch health details of all signal repeators registered */\r\n  signalRepeatorHealth = () => {\r\n    axios({ method: \"GET\", url: signalRepeator })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          let data = response.data;\r\n          if (data.length !== 0) {\r\n            $(\"#signalRepeaterHealth\").empty();\r\n            for (let i = 0; i < data.length; i++) {\r\n              let timestamp =\r\n                  data[i].lastseen.substr(0, 10) +\r\n                  \" \" +\r\n                  data[i].lastseen.substr(11, 8),\r\n                status = \"red\";\r\n              if (new Date() - new Date(data[i].lastseen) <= 2 * 60 * 1000) {\r\n                status = \"green\";\r\n              }\r\n              $(\"#signalRepeaterHealth\").append(\r\n                \"<tr><td>\" +\r\n                  (i + 1) +\r\n                  \"</td><td>\" +\r\n                  data[i].macid +\r\n                  \"</td><td>\" +\r\n                  timestamp +\r\n                  \"</td><td>\" +\r\n                  \"<div class='circle' style='margin:auto;background-color:\" +\r\n                  status +\r\n                  \";'></div></td></tr>\"\r\n              );\r\n            }\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.status === 403) {\r\n          $(\"#syshealth_displayModal\").css(\"display\", \"block\");\r\n          $(\"#content\").text(\"User Session has timed out. Please Login again.\");\r\n        } else {\r\n          $(\"#sys-error\").text(\r\n            \"Signal Repeator : Request failed with status code \" +\r\n              error.response.status\r\n          );\r\n        }\r\n      });\r\n  };\r\n\r\n  /** Fetch health details of all temperature humidity and irq sensors registered */\r\n  sensorHealth = () => {\r\n    $(\"#sensorHealth\").empty();\r\n    let count = 0;\r\n    axios({ method: \"GET\", url: tempertureSensor })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          let data = response.data;\r\n          if (data.length !== 0) {\r\n            for (let i = 0; i < data.length; i++) {\r\n              let timestamp =\r\n                  data[i].lastseen.substr(0, 10) +\r\n                  \" \" +\r\n                  data[i].lastseen.substr(11, 8),\r\n                status = \"red\";\r\n              if (new Date() - new Date(data[i].lastseen) <= 2 * 60 * 1000) {\r\n                status = \"green\";\r\n              }\r\n              $(\"#sensorHealth\").append(\r\n                \"<tr><td>\" +\r\n                  (i + 1) +\r\n                  \"</td><td>\" +\r\n                  data[i].macid +\r\n                  \"</td><td>Temp/Humid Sensor</td><td>\" +\r\n                  data[i].battery +\r\n                  \"</td><td>\" +\r\n                  timestamp +\r\n                  \"</td><td>\" +\r\n                  \"<div class='circle' style='margin:auto;background-color:\" +\r\n                  status +\r\n                  \";'></div></td></tr>\"\r\n              );\r\n              count = i + 1;\r\n            }\r\n            this.iaqHealth(count);\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        // console.log(error);\r\n        if (error.response.status === 403) {\r\n          $(\"#syshealth_displayModal\").css(\"display\", \"block\");\r\n          $(\"#content\").text(\"User Session has timed out. Please Login again.\");\r\n        } else {\r\n          $(\"#sys-error\").text(\r\n            \"Sensor Health : Request failed with status code \" +\r\n              error.response.status\r\n          );\r\n        }\r\n      });\r\n  };\r\n\r\n  iaqHealth = (count) => {\r\n    axios({ method: \"GET\", url: irqSensor })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          let data = response.data;\r\n          if (data.length !== 0) {\r\n            for (let i = 0; i < data.length; i++) {\r\n              let timestamp =\r\n                  data[i].lastseen.substr(0, 10) +\r\n                  \" \" +\r\n                  data[i].lastseen.substr(11, 8),\r\n                status = \"red\";\r\n              if (new Date() - new Date(data[i].lastseen) <= 2 * 60 * 1000) {\r\n                status = \"green\";\r\n              }\r\n              $(\"#sensorHealth\").append(\r\n                \"<tr><td>\" +\r\n                  parseInt(count + parseInt(i + 1)) +\r\n                  \"</td><td>\" +\r\n                  data[i].macid +\r\n                  \"</td><td>IAQ Sensor</td><td>\" +\r\n                  data[i].battery +\r\n                  \"</td><td>\" +\r\n                  timestamp +\r\n                  \"</td><td>\" +\r\n                  \"<div class='circle' style='margin:auto;background-color:\" +\r\n                  status +\r\n                  \";'></div></td></tr>\"\r\n              );\r\n            }\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        // console.log(error);\r\n        if (error.response.status === 403) {\r\n          $(\"#syshealth_displayModal\").css(\"display\", \"block\");\r\n          $(\"#content\").text(\"User Session has timed out. Please Login again.\");\r\n        } else {\r\n          $(\"#sys-error\").text(\r\n            \"Sensor Health : Request failed with status code \" +\r\n              error.response.status\r\n          );\r\n        }\r\n      });\r\n  };\r\n\r\n  /** Fetch health details of all employee tags registered */\r\n  assetHealth = () => {\r\n    axios({ method: \"GET\", url: employeeTag })\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          let data = response.data;\r\n          if (data.length !== 0) {\r\n            $(\"#systemHealth\").empty();\r\n            for (let i = 0; i < data.length; i++) {\r\n              let timestamp =\r\n                  data[i].lastseen.substr(0, 10) +\r\n                  \" \" +\r\n                  data[i].lastseen.substr(11, 8),\r\n                status = \"red\";\r\n              if (new Date() - new Date(data[i].lastseen) <= 2 * 60 * 1000) {\r\n                status = \"green\";\r\n              }\r\n              $(\"#systemHealth\").append(\r\n                \"<tr><td>\" +\r\n                  (i + 1) +\r\n                  \"</td><td>\" +\r\n                  data[i].tagid +\r\n                  \"</td><td>\" +\r\n                  data[i].battery +\r\n                  \"</td><td>\" +\r\n                  timestamp +\r\n                  \"</td><td>\" +\r\n                  \"<div class='circle' style='margin:auto;background-color:\" +\r\n                  status +\r\n                  \";'></div></td></tr>\"\r\n              );\r\n            }\r\n          }\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        // console.log(error);\r\n        if (error.response.status === 403) {\r\n          $(\"#syshealth_displayModal\").css(\"display\", \"block\");\r\n          $(\"#content\").text(\"User Session has timed out. Please Login again.\");\r\n        } else {\r\n          $(\"#sys-error\").text(\r\n            \"Employee Tag : Request failed with status code \" +\r\n              error.response.status\r\n          );\r\n        }\r\n      });\r\n  };\r\n\r\n  /** Terminate the session on forbidden (403) error */\r\n  sessionTimeout = () => {\r\n    $(\"#syshealth_displayModal\").css(\"display\", \"none\");\r\n    sessionStorage.setItem(\"isLoggedIn\", 0);\r\n    this.props.handleLogin(0);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Helmet>\r\n          <title>System Health</title>\r\n        </Helmet>\r\n        <div className=\"panel\">\r\n          <span className=\"main-heading\">SYSTEM HEALTH</span>\r\n          <br />\r\n          <img alt=\"\" src=\"../images/Tiles/Underline.png\" style={Underline} />\r\n          <div className=\"container fading\" style={{ marginTop: \"40px\" }}>\r\n            <p className=\"error-msg\" id=\"sys-error\"></p>\r\n            <br></br>\r\n            {/* Maseter Gateway Table */}\r\n            <span className=\"heading\">Master Gateway</span>\r\n            <br />\r\n            <img\r\n              src=\"../images/Tiles/Underline.png\"\r\n              alt=\"\"\r\n              style={{\r\n                width: \"56px\",\r\n                height: \"3px\",\r\n                marginTop: \"2px\",\r\n                position: \"absolute\",\r\n              }}\r\n            />\r\n            <table style={{ marginTop: \"20px\", marginBottom: \"30px\" }}>\r\n              <thead>\r\n                <tr>\r\n                  <th>Sl.No</th>\r\n                  <th>MASTER ID</th>\r\n                  <th>FLOOR NAME</th>\r\n                  <th>LAST SEEN</th>\r\n                  <th>STATUS</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody id=\"gatewayHealth\"></tbody>\r\n            </table>\r\n            {/* ----------------------------------------------- */}\r\n            {/* Slave Gateway Table */}\r\n            <span className=\"heading\">Slave Gateway</span>\r\n            <br />\r\n            <img\r\n              src=\"../images/Tiles/Underline.png\"\r\n              alt=\"\"\r\n              style={{\r\n                width: \"56px\",\r\n                height: \"3px\",\r\n                marginTop: \"2px\",\r\n                position: \"absolute\",\r\n              }}\r\n            />\r\n            <table style={{ marginTop: \"20px\", marginBottom: \"30px\" }}>\r\n              <thead>\r\n                <tr>\r\n                  <th>Sl.No</th>\r\n                  <th>SLAVE ID</th>\r\n                  <th>FLOOR NAME</th>\r\n                  <th>MASTER GATEWAY ID</th>\r\n                  <th>LAST SEEN</th>\r\n                  <th>STATUS</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody id=\"slaveHealth\"></tbody>\r\n            </table>\r\n            {/* ----------------------------------------------- */}\r\n            {/*Signal Repeater Table */}\r\n            <span className=\"heading\">Signal Repeater</span>\r\n            <br />\r\n            <img\r\n              src=\"../images/Tiles/Underline.png\"\r\n              alt=\"\"\r\n              style={{\r\n                width: \"56px\",\r\n                height: \"3px\",\r\n                marginTop: \"2px\",\r\n                position: \"absolute\",\r\n              }}\r\n            />\r\n            <table style={{ marginTop: \"20px\", marginBottom: \"30px\" }}>\r\n              <thead>\r\n                <tr>\r\n                  <th>Sl.No</th>\r\n                  <th>MAC ID</th>\r\n                  <th>Last Seen</th>\r\n                  <th>Status</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody id=\"signalRepeaterHealth\"></tbody>\r\n            </table>\r\n            {/* ----------------------------------------------- */}\r\n            {/*Sensor Table */}\r\n            <span className=\"heading\">Sensors</span>\r\n            <br />\r\n            <img\r\n              src=\"../images/Tiles/Underline.png\"\r\n              alt=\"\"\r\n              style={{\r\n                width: \"56px\",\r\n                height: \"3px\",\r\n                marginTop: \"2px\",\r\n                position: \"absolute\",\r\n              }}\r\n            />\r\n            <table style={{ marginTop: \"20px\", marginBottom: \"30px\" }}>\r\n              <thead>\r\n                <tr>\r\n                  <th>Sl.No</th>\r\n                  <th>MAC ID</th>\r\n                  <th>Sensor Type</th>\r\n                  <th>Battery Status (%)</th>\r\n                  <th>Last Seen</th>\r\n                  <th>Status</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody id=\"sensorHealth\"></tbody>\r\n            </table>\r\n            {/* ----------------------------------------------- */}\r\n            {/* Assets Table */}\r\n            <span className=\"heading\">Assets</span>\r\n            <br />\r\n            <img\r\n              src=\"../images/Tiles/Underline.png\"\r\n              alt=\"\"\r\n              style={{\r\n                width: \"56px\",\r\n                height: \"3px\",\r\n                marginTop: \"2px\",\r\n                position: \"absolute\",\r\n              }}\r\n            />\r\n            <table style={{ marginTop: \"20px\", marginBottom: \"30px\" }}>\r\n              <thead>\r\n                <tr>\r\n                  <th>Sl.No</th>\r\n                  <th>Asset MAC ID</th>\r\n                  <th>Battery Status (%)</th>\r\n                  <th>Last Seen</th>\r\n                  <th>Status</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody id=\"systemHealth\"></tbody>\r\n            </table>\r\n            {/* ----------------------------------------------- */}\r\n          </div>\r\n        </div>\r\n        {/* Display modal to display error messages */}\r\n        <div id=\"syshealth_displayModal\" className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <p id=\"content\" style={{ textAlign: \"center\" }}></p>\r\n            <button\r\n              id=\"ok\"\r\n              className=\"btn-center btn success-btn\"\r\n              onClick={this.sessionTimeout}\r\n            >\r\n              OK\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SystemHealth;\r\n","C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\Tracking.js",[],"C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\Reports.js",[],"C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\Temperature.js",[],"C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\Assets.js",[],"C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\TagAllocation.js",[],"C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\Alerts.js",[],"C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\EmployeeRegistraion.js",[],"C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\AirQuality.js",[],"C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\ZoneConfig.js",[],"C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\login\\Login.js",[],"C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\DistanceTracking.js",[],"C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\navbar\\Navbar.js",[],"C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\header\\Header.js",[],"C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\Sensors\\SensorDetails.js",[],"C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\Sensors\\SensorDetailsCards.js",["120","121"],"C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\Sensors\\SensorsDetailGraph.js",[],"C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\SlaveGateway.js",[],"C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\MasterGateway.js",[],"C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\component\\pages\\AssetReg.js",["122"],"import React, { Component, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Styling.css\";\r\nimport $ from \"jquery\";\r\naxios.defaults.xsrfHeaderName = \"x-csrftoken\";\r\n    axios.defaults.xsrfCookieName = \"csrftoken\";\r\n    axios.defaults.withCredentials = true;\r\nimport {\r\n  employeeTag,\r\n  floorMap,\r\n  irqSensor,\r\n  signalRepeator,\r\n  tempertureSensor,\r\n} from \"../../urls/apis\";\r\n\r\nclass AssetReg extends Component {\r\n  /** On page load get list of floor map for registering sensors */\r\n  componentDidMount = () => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: floorMap,\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 201 || response.status === 200) {\r\n          this.fdata = response.data;\r\n          if (this.fdata.length !== 0) {\r\n            for (let i = 0; i < this.fdata.length; i++) {\r\n              $(\"#fname\").append(\r\n                \"<option value=\" +\r\n                  this.fdata[i].id +\r\n                  \">\" +\r\n                  this.fdata[i].name +\r\n                  \"</option>\"\r\n              );\r\n              $(\"#fname1\").append(\r\n                \"<option value=\" +\r\n                  this.fdata[i].id +\r\n                  \">\" +\r\n                  this.fdata[i].name +\r\n                  \"</option>\"\r\n              );\r\n            }\r\n          } else {\r\n            $(\"#master-error\").text(\r\n              \"Please upload floormap to register Master Gateway.\"\r\n            );\r\n          }\r\n        } else {\r\n          $(\"#master-error\").text(\"Unable to fetch floor names\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.status === 403) {\r\n          $(\"#config_displayModal\").css(\"display\", \"block\");\r\n          $(\"#content\").text(\"User Session has timed out. Please Login again.\");\r\n        } else {\r\n          $(\"#master-error\").text(\r\n            \"Request Failed with status code (\" + error.response.status + \").\"\r\n          );\r\n        }\r\n      });\r\n  };\r\n\r\n  /** To change the state of component on entering the values in input fields */\r\n  // handleChanges = (e) => {\r\n  //   this.setState({ [e.target.name]: e.target.value });\r\n  // };\r\n\r\n  /** Displays all input fields to get details of employees for registering tracking tags */\r\n  displayTrackingForm = () => {\r\n    let type = $(\"#type\").val();\r\n    this.setState({ type: type });\r\n\r\n    if (type === \"Temperature/Humidity Sensor\")\r\n      $(\"#temp_form\").css(\"display\", \"block\");\r\n    else $(\"#temp_form\").css(\"display\", \"none\");\r\n\r\n    if (type === \"IAQ Sensor\") $(\"#iaq_form\").css(\"display\", \"block\");\r\n    else $(\"#iaq_form\").css(\"display\", \"none\");\r\n  };\r\n\r\n  /** Displays Delete tag form on clicking Delete Tag Button */\r\n  show = () => {\r\n    $(\"input[type=text]\").val(\"\");\r\n    $(\"input[type=email]\").val(\"\");\r\n    document.getElementById(\"delete-form\").style.display =\r\n      $(\"#delete-form\").css(\"display\") === \"none\" ? \"block\" : \"none\";\r\n    window.scrollTo(0, document.body.scrollHeight);\r\n  };\r\n\r\n  /** Hides all error and success messages displayed on all button clicks */\r\n  hide = () => {\r\n    $(\"#conf-error\").text(\"\");\r\n    $(\"#conf-success\").text(\"\");\r\n  };\r\n\r\n  /** Register the both sensor and tracking tags */\r\n  register = (e) => {\r\n    this.hide();\r\n    e.preventDefault();\r\n    $(\"#delete-form\").css(\"display\", \"none\");\r\n    let data = {};\r\n    if ($(\"#tagid\").val().length === 0) {\r\n      $(\"#conf-error\").text(\"Please enter tag MAC ID.\");\r\n    } else if (\r\n      !$(\"#tagid\").val().match(\"([A-Za-z0-9]{2}[-]){5}([A-Za-z0-9]){2}\")\r\n    ) {\r\n      $(\"#conf-error\").text(\r\n        \"Invalid MAC ID entered. Please enter proper MAC ID.\"\r\n      );\r\n    } else if ($(\"#type\").val() === \"Temperature/Humidity Sensor\") {\r\n      data = {\r\n        macaddress: $(\"#tagid\").val(),\r\n        x1: $(\"#x\").val(),\r\n        y1: $(\"#y\").val(),\r\n        x2: $(\"#x1\").val(),\r\n        y2: $(\"#y1\").val(),\r\n        id: $(\"#fname\").val(),\r\n      };\r\n      if (\r\n        data.x1 !== \"\" &&\r\n        data.y1 !== \"\" &&\r\n        data.x2 !== \"\" &&\r\n        data.y2 !== \"\" &&\r\n        data.id !== \"\"\r\n      ) {\r\n        axios({\r\n          method: \"POST\",\r\n          url: tempertureSensor,\r\n          data: data,\r\n        })\r\n          .then((response) => {\r\n            if (response.status === 201) {\r\n              $(\"#conf-success\").text(\r\n                \"Temperature-Humidity Sensor is registered successfully.\"\r\n              );\r\n            } else {\r\n              $(\"#conf-error\").text(\"Unable to register sensor.\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            if (error.response.status === 403) {\r\n              $(\"#config_displayModal\").css(\"display\", \"block\");\r\n              $(\"#content\").text(\r\n                \"User Session has timed out. Please Login again.\"\r\n              );\r\n            } else if (error.response.status === 400) {\r\n              $(\"#conf-error\").text(\"Tag is already registered.\");\r\n            } else {\r\n              $(\"#conf-error\").text(\r\n                \"Request Failed with status code (\" +\r\n                  error.response.status +\r\n                  \").\"\r\n              );\r\n            }\r\n          });\r\n      } else {\r\n        $(\"#conf-error\").text(\"Please provide all information.\");\r\n      }\r\n    } else if ($(\"#type\").val() === \"IAQ Sensor\") {\r\n      data = {\r\n        macaddress: $(\"#tagid\").val(),\r\n        x: $(\"#xval\").val(),\r\n        y: $(\"#yval\").val(),\r\n        id: $(\"#fname1\").val(),\r\n      };\r\n      if (data.x !== \"\" && data.y !== \"\" && data.id !== \"\") {\r\n        axios({\r\n          method: \"POST\",\r\n          url: irqSensor,\r\n          data: data,\r\n        })\r\n          .then((response) => {\r\n            if (response.status === 201) {\r\n              $(\"#conf-success\").text(\"IAQ sensor registered successfully.\");\r\n            } else {\r\n              $(\"#conf-error\").text(\"Unable to Register Tag.\");\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            // console.log(error);\r\n            if (error.response.status === 403) {\r\n              $(\"#config_displayModal\").css(\"display\", \"block\");\r\n              $(\"#content\").text(\r\n                \"User Session has timed out. Please Login again.\"\r\n              );\r\n            } else if (error.response.status === 400) {\r\n              $(\"#conf-error\").text(\"Tag is already registered.\");\r\n            } else {\r\n              $(\"#conf-error\").text(\r\n                \"Request Failed with status code (\" +\r\n                  error.response.status +\r\n                  \").\"\r\n              );\r\n            }\r\n          });\r\n      } else {\r\n        $(\"#conf-error\").text(\"Please provide all information.\");\r\n      }\r\n    } else if ($(\"#type\").val() === \"Employee\") {\r\n      data = {\r\n        macaddress: $(\"#tagid\").val(),\r\n      };\r\n      axios({\r\n        method: \"POST\",\r\n        url: employeeTag,\r\n        data: data,\r\n      })\r\n        .then((response) => {\r\n          if (response.status === 201 || response.status === 200) {\r\n            $(\"#conf-success\").text(\"Employee Tag registered successfully.\");\r\n          } else {\r\n            $(\"#conf-error\").text(\"Unable to Register Tag.\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          if (error.response.status === 403) {\r\n            $(\"#config_displayModal\").css(\"display\", \"block\");\r\n            $(\"#content\").text(\r\n              \"User Session has timed out. Please Login again.\"\r\n            );\r\n          } else if (error.response.status === 400) {\r\n            $(\"#conf-error\").text(\"Employee Tag is already registered.\");\r\n          } else {\r\n            $(\"#conf-error\").text(\r\n              \"Request Failed with status code (\" +\r\n                error.response.status +\r\n                \") : Employee Tag\"\r\n            );\r\n          }\r\n        });\r\n    } else {\r\n      data = {\r\n        macaddress: $(\"#tagid\").val(),\r\n      };\r\n      axios({\r\n        method: \"POST\",\r\n        url: signalRepeator,\r\n        data: data,\r\n      })\r\n        .then((response) => {\r\n          if (response.status === 201 || response.status === 200) {\r\n            $(\"#conf-success\").text(\r\n              \"Signal Repeater is registered successfully.\"\r\n            );\r\n          } else {\r\n            $(\"#conf-error\").text(\"Unable to Register Asset.\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          if (error.response.status === 403) {\r\n            $(\"#config_displayModal\").css(\"display\", \"block\");\r\n            $(\"#content\").text(\r\n              \"User Session has timed out. Please Login again.\"\r\n            );\r\n          } else if (error.response.status === 400) {\r\n            $(\"#conf-error\").text(\"Signal Repeater is already registered.\");\r\n          } else {\r\n            $(\"#conf-error\").text(\r\n              \"Request Failed with status code (\" +\r\n                error.response.status +\r\n                \") : Employee Tag\"\r\n            );\r\n          }\r\n        });\r\n    }\r\n    // !data.emailid.match(\r\n    //   \"^[a-zA-Z][a-zA-Z0-9_.-]+@[a-zA-Z0-9]+[.]{1}[a-zA-Z]+$\"\r\n    // )\r\n    $(\"input[type=text]\").val(\"\");\r\n    $(\"input[type=email]\").val(\"\");\r\n    $(\"input[type=number]\").val(\"\");\r\n  };\r\n\r\n  /** Unregister the registered tags */\r\n  unregister = (e) => {\r\n    this.hide();\r\n    e.preventDefault();\r\n    let id = $(\"#macid\").val();\r\n    if (id.length === 0)\r\n      $(\"#conf-error\").text(\"Please Enter MAC ID to Un-registered.\");\r\n    else if (!id.match(\"([A-Za-z0-9]{2}[-]){5}([A-Za-z0-9]){2}\"))\r\n      $(\"#conf-error\").text(\"Invalid MAC ID entered.\");\r\n    else if ($(\"#tagtype\").val() === \"Temperature/Humidity Sensor\") {\r\n      axios({\r\n        method: \"DELETE\",\r\n        url: tempertureSensor,\r\n        data: { macaddress: id },\r\n      })\r\n        .then((response) => {\r\n          if (response.status === 200) {\r\n            $(\"#conf-success\").text(\"Tag un-registered successfully.\");\r\n          } else {\r\n            $(\"#conf-error\").text(\"Unable to un-registered Tag.\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          if (error.response.status === 403) {\r\n            $(\"#config_displayModal\").css(\"display\", \"block\");\r\n            $(\"#content\").text(\r\n              \"User Session has timed out. Please Login again\"\r\n            );\r\n          } else {\r\n            $(\"#conf-error\").text(\r\n              \"Request Failed with status code (\" + error.response.status + \").\"\r\n            );\r\n          }\r\n        });\r\n    } else if ($(\"#tagtype\").val() === \"IAQ Sensor\") {\r\n      axios({\r\n        method: \"DELETE\",\r\n        url: irqSensor,\r\n        data: { macaddress: id },\r\n      })\r\n        .then((response) => {\r\n          if (response.status === 200) {\r\n            $(\"#conf-success\").text(\"Tag un-registered successfully.\");\r\n          } else {\r\n            $(\"#conf-error\").text(\"Unable to un-registered Tag.\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          if (error.response.status === 403) {\r\n            $(\"#config_displayModal\").css(\"display\", \"block\");\r\n            $(\"#content\").text(\r\n              \"User Session has timed out. Please Login again\"\r\n            );\r\n          } else {\r\n            $(\"#conf-error\").text(\r\n              \"Request Failed with status code (\" + error.response.status + \").\"\r\n            );\r\n          }\r\n        });\r\n    } else if ($(\"#tagtype\").val() === \"Signal Repeater\") {\r\n      // console.log(id);\r\n      axios({\r\n        method: \"DELETE\",\r\n        url: signalRepeator,\r\n        data: { macaddress: id },\r\n      })\r\n        .then((response) => {\r\n          // console.log(response);\r\n          if (response.status === 200) {\r\n            $(\"#conf-success\").text(\r\n              \"Signal Repeater Asset deleted successfully.\"\r\n            );\r\n          } else {\r\n            $(\"#conf-error\").text(\"Unable to delete asset.\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          // console.log(error);\r\n          if (error.response.status === 403) {\r\n            $(\"#config_displayModal\").css(\"display\", \"block\");\r\n            $(\"#content\").text(\r\n              \"User Session has timed out. Please Login again.\"\r\n            );\r\n          } else {\r\n            $(\"#conf-error\").text(\r\n              \"Request Failed with status code (\" +\r\n                error.response.status +\r\n                \") : Employee Tag\"\r\n            );\r\n          }\r\n        });\r\n    } else if ($(\"#tagtype\").val() === \"Employee\") {\r\n      axios({\r\n        method: \"DELETE\",\r\n        url: employeeTag,\r\n        data: { macaddress: id },\r\n      })\r\n        .then((response) => {\r\n          if (response.status === 200) {\r\n            $(\"#conf-success\").text(\"Employee Tag deleted successfully.\");\r\n          } else {\r\n            $(\"#conf-error\").text(\"Unable to delete Tag.\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          if (error.response.status === 403) {\r\n            $(\"#config_displayModal\").css(\"display\", \"block\");\r\n            $(\"#content\").text(\r\n              \"User Session has timed out. Please Login again.\"\r\n            );\r\n          } else {\r\n            $(\"#conf-error\").text(\r\n              \"Request Failed with status code (\" +\r\n                error.response.status +\r\n                \") : Employee Tag\"\r\n            );\r\n          }\r\n        });\r\n    }\r\n    $(\"input[type=text]\").val(\"\");\r\n    $(\"input[type=email]\").val(\"\");\r\n  };\r\n\r\n  /** Terminate the session on forbidden (403) error */\r\n  sessionTimeout = () => {\r\n    $(\"#config_displayModal\").css(\"display\", \"none\");\r\n    sessionStorage.setItem(\"isLoggedIn\", 0);\r\n    this.props.handleLoginError();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <span className=\"sub-heading\">Asset Registration</span>\r\n        <br />\r\n        <img\r\n          src=\"../images/Tiles/Underline.png\"\r\n          alt=\"\"\r\n          style={{\r\n            width: \"56px\",\r\n            height: \"3px\",\r\n            marginTop: \"2px\",\r\n            position: \"absolute\",\r\n          }}\r\n        />\r\n        <br></br>\r\n        <div>\r\n          {/* Element for displaying error messages */}\r\n          <span className=\"error-msg\" id=\"conf-error\"></span>\r\n          <span className=\"success-msg\" id=\"conf-success\"></span>\r\n        </div>\r\n        {/* Form for Registering the sensor and tracking tags */}\r\n        <form id=\"reg-form\">\r\n          {/* Input field for Tag MAC ID */}\r\n          <div className=\"input-group\">\r\n            <span className=\"label\">Tag MAC ID :</span>\r\n            <input\r\n              type=\"text\"\r\n              id=\"tagid\"\r\n              required=\"required\"\r\n              onClick={this.hide}\r\n              placeholder=\"5a-c2-15-00-00-00\"\r\n            />\r\n          </div>\r\n          {/* Select List for Tag Type  */}\r\n          <div className=\"input-group\">\r\n            <span className=\"label\">Tag Type :</span>\r\n            <select\r\n              id=\"type\"\r\n              onChange={() => {\r\n                this.displayTrackingForm();\r\n                this.hide();\r\n              }}\r\n            >\r\n              <option>Temperature/Humidity Sensor</option>\r\n              <option>IAQ Sensor</option>\r\n              <option>Signal Repeater</option>\r\n              <option>Employee</option>\r\n            </select>\r\n          </div>\r\n          <div id=\"temp_form\" className=\"fading\" style={{ display: \"block\" }}>\r\n            {/* Input field for Floor Name */}\r\n            <div className=\"input-group\">\r\n              <span className=\"label\">Floor Name : </span>\r\n              <select name=\"type\" id=\"fname\"></select>\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <span className=\"label\">X Co-ordinate : </span>\r\n              <input type=\"number\" id=\"x\" required=\"required\" />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <span className=\"label\">Y Co-ordinate : </span>\r\n              <input type=\"number\" id=\"y\" required=\"required\" />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <span className=\"label\">X1 Co-ordinate : </span>\r\n              <input type=\"number\" id=\"x1\" required=\"required\" />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <span className=\"label\">Y1 Co-ordinate : </span>\r\n              <input type=\"number\" id=\"y1\" required=\"required\" />\r\n            </div>\r\n          </div>\r\n          <div id=\"iaq_form\" className=\"fading\" style={{ display: \"none\" }}>\r\n            {/* Input field for Floor Name */}\r\n            <div className=\"input-group\">\r\n              <span className=\"label\">Floor Name : </span>\r\n              <select name=\"type\" id=\"fname1\"></select>\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <span className=\"label\">X Co-ordinate : </span>\r\n              <input type=\"number\" id=\"xval\" required=\"required\" />\r\n            </div>\r\n            <div className=\"input-group\">\r\n              <span className=\"label\">Y Co-ordinate : </span>\r\n              <input type=\"number\" id=\"yval\" required=\"required\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Register Tag\"\r\n              onClick={this.register}\r\n              className=\"btn success-btn\"\r\n            />\r\n          </div>\r\n        </form>\r\n        {/* Button for toggeling for Deleting Tag Form */}\r\n        <button\r\n          onClick={() => {\r\n            this.show();\r\n            this.hide();\r\n          }}\r\n          className=\"btn success-btn\"\r\n        >\r\n          Remove Tag\r\n        </button>\r\n        {/* Form for deleting the registered tags */}\r\n        <form id=\"delete-form\" className=\"fading\" style={{ display: \"none\" }}>\r\n          {/* Select List for Tag Type  */}\r\n          <div className=\"input-group\">\r\n            <span className=\"label\">Tag Type :</span>\r\n            <select\r\n              id=\"tagtype\"\r\n              onChange={() => {\r\n                this.displayTrackingForm();\r\n                this.hide();\r\n              }}\r\n            >\r\n              <option>Temperature/Humidity Sensor</option>\r\n              <option>IAQ Sensor</option>\r\n              <option>Signal Repeater</option>\r\n              <option>Employee</option>\r\n            </select>\r\n          </div>\r\n          {/* Input Field for Tag MAC ID */}\r\n          <div className=\"input-group\">\r\n            <span className=\"label\">Tag MAC ID :</span>\r\n            <input\r\n              type=\"text\"\r\n              name=\"macid\"\r\n              id=\"macid\"\r\n              required=\"required\"\r\n              onClick={this.hide}\r\n              placeholder=\"5a-c2-15-00-00-00\"\r\n            />\r\n          </div>\r\n\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Delete Tag\"\r\n              onClick={this.unregister}\r\n              className=\"btn success-btn\"\r\n            />\r\n          </div>\r\n        </form>\r\n        {/* Display modal to display error messages */}\r\n        <div id=\"config_displayModal\" className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <p id=\"content\" style={{ textAlign: \"center\" }}></p>\r\n            <button\r\n              id=\"ok\"\r\n              className=\"btn-center btn success-btn\"\r\n              onClick={this.sessionTimeout}\r\n            >\r\n              OK\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AssetReg;\r\n","C:\\Users\\Akhila Janney\\Desktop\\astra new\\src\\urls\\apis.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":2,"message":"128","line":9,"column":1,"nodeType":"129","endLine":16,"endColumn":26,"fix":"130"},{"ruleId":"131","severity":1,"message":"132","line":6,"column":8,"nodeType":"133","messageId":"134","endLine":6,"endColumn":16},{"ruleId":"131","severity":1,"message":"135","line":8,"column":8,"nodeType":"133","messageId":"134","endLine":8,"endColumn":21},{"ruleId":"127","severity":2,"message":"128","line":8,"column":1,"nodeType":"129","endLine":14,"endColumn":26,"fix":"136"},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"import/first","Import in body of module; reorder to top.","ImportDeclaration",{"range":"139","text":"140"},"no-unused-vars","'html2pdf' is defined but never used.","Identifier","unusedVar","'SensorDetails' is defined but never used.",{"range":"141","text":"142"},"no-global-assign","no-unsafe-negation",[0,453],"import React, { Component, Fragment } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport axios from \"axios\";\r\nimport $ from \"jquery\";\r\nimport \"./Styling.css\";\r\nimport {\r\n  employeeTag,\r\n  irqSensor,\r\n  masterGateway,\r\n  signalRepeator,\r\n  slaveGateway,\r\n  tempertureSensor,\r\n} from \"../../urls/apis\";\r\naxios.defaults.xsrfHeaderName = \"x-csrftoken\";\r\n    axios.defaults.xsrfCookieName = \"csrftoken\";\r\n    axios.defaults.withCredentials = true;",[0,391],"import React, { Component, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Styling.css\";\r\nimport $ from \"jquery\";\r\nimport {\r\n  employeeTag,\r\n  floorMap,\r\n  irqSensor,\r\n  signalRepeator,\r\n  tempertureSensor,\r\n} from \"../../urls/apis\";\r\naxios.defaults.xsrfHeaderName = \"x-csrftoken\";\r\n    axios.defaults.xsrfCookieName = \"csrftoken\";\r\n    axios.defaults.withCredentials = true;"]